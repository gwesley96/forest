name: Build and Deploy Forester Output

on:
  push:
    branches:
      - main # This triggers the workflow on pushes to the 'main' branch of THIS Forester project repository

jobs:
  build-and-deploy-forester:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Forester source code
        uses: actions/checkout@v4
        # If your Forester project uses Git submodules (e.g., for themes), add:
        # with:
        #   submodules: 'recursive'

      - name: Set up OCaml
              uses: ocaml/setup-ocaml@v2
              with:
                ocaml-compiler: '5.1.1' # Or your required OCaml version
                opam-depext: false     # Prevent setup-ocaml from trying to install system packages like 'darcs'
                # opam-pin: false      # You can also keep this if you had it, or test without it first once depext is false.
                                # The darcs issue is the primary blocker right now.

      - name: Cache OPAM switch and Forester installation
        id: cache-opam
        uses: actions/cache@v4
        with:
          path: ~/.opam # Cache the OPAM root, includes installed packages
          # Key changes if OCaml version or key Forester project files change
          key: ${{ runner.os }}-ocaml-${{ steps.setup-ocaml.outputs.ocaml-version }}-opam-${{ hashFiles('**/forest.toml', '**/*.opam') }}
          restore-keys: |
            ${{ runner.os }}-ocaml-${{ steps.setup-ocaml.outputs.ocaml-version }}-opam-

      - name: Install Forester (if not found in cache)
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: |
          opam update
          opam install forester -y # Installs Forester and its dependencies

      - name: Ensure OPAM environment is set up
        run: eval $(opam env) # So 'forester' command can be found

      - name: Build Forester site
        run: |
          # eval $(opam env) # Already set in the previous step
          forester build forest.toml # This command should create an ./output directory
          echo "Forester build complete. Checking output directory:"
          ls -la ./output # Lists contents of the output directory for verification
      - name: Deploy 'output' directory to gwesley96.github.io/tytytyty
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GH_PAGES_PAT }}
          external_repository: gwesley96/gwesley96.github.io
          publish_branch: master 
          publish_dir: ./output
          destination_dir: tytytyty # <--- Changed to 'destination_dir'
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy Forester output to /tytytyty [CI]'