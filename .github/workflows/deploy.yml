name: Build and Deploy Forester Output

on:
  push:
    branches:
      - main # In your Forester project repository

jobs:
  build-and-deploy-forester:
    runs-on: ubuntu-latest

    container:
      image: ocaml/opam:ubuntu-ocaml-5.1
      options: --user root # Continue running as root

    steps:
      - name: Checkout Forester source code
        uses: actions/checkout@v4

      - name: Cache OPAM packages for root user
        id: cache-opam
        uses: actions/cache@v4
        with:
          path: /root/.opam # OPAM root for the root user
          key: ${{ runner.os }}-ocaml5.1-opam-root-${{ hashFiles('**/forest.toml\n**/*.opam\n**/opam.lock') }}
          restore-keys: |
            ${{ runner.os }}-ocaml5.1-opam-root-

      - name: Set up OPAM, Install/Update Forester
        shell: bash
        run: |
          set -e # Exit immediately if a command exits with a non-zero status

          echo "OPAM_ROOT is explicitly /root/.opam for this session"
          export OPAMROOT="/root/.opam"

          echo "Initializing OPAM for root (non-interactively)..."
          # Use echo to answer 'n' to shell setup prompts.
          # --reinit --bare should make it mostly non-interactive with --yes.
          # The container's OPAMYES=1 should make --yes implicit for most things.
          echo -e "n\nn" | opam init --reinit --bare --disable-sandboxing --yes
          
          echo "Setting up OCaml switch for root..."
          # Create 'default' switch for OCaml 5.1.1 if it doesn't exist from cache, then ensure it's set.
          if ! opam switch list | grep -q "^default "; then
            opam switch create default ocaml-base-compiler.5.1.1 --yes
          fi
          opam switch set default

          echo "Setting OPAM environment variables for subsequent steps..."
          # Use --set-root to ensure OPAMROOT is part of the env script
          # Use --set-switch to ensure the switch context is part of the env script
          # Output these vars to $GITHUB_ENV so subsequent steps in this job inherit them.
          opam env --set-root --set-switch >> $GITHUB_ENV
          
          # Also eval for the current step
          eval $(opam env --set-root --set-switch)

          echo "Verifying OCaml/OPAM versions (after env setup)..."
          opam --version
          ocaml --version
          echo "OPAM Root Directory from 'opam var root' is: $(opam var root)"
          
          echo "Updating OPAM repositories..."
          opam update -u --yes
          
          echo "Installing Forester and its dependencies (using cache if available)..."
          # Corrected: removed --depexts flag. 
          # OPAM will handle system dependencies if needed and declared by Forester's package.
          opam install forester --yes --show-actions

      - name: Verify Forester Installation
        shell: bash 
        run: |
          # Env vars from GITHUB_ENV should make 'forester' available
          forester --version

      - name: Build Forester Site
        shell: bash 
        run: |
          # Env vars from GITHUB_ENV should make 'forester' available
          forester build forest.toml 
          echo "Forester build complete. Output should be in ./output/"
          echo "Contents of ./output directory:"
          ls -la ./output

      - name: Deploy 'output' directory to gwesley96.github.io/tytytyty
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GH_PAGES_PAT }} 
          external_repository: gwesley96/gwesley96.github.io
          publish_branch: master 
          publish_dir: ./output
          destination_dir: tytytyty 
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy Forester output to /tytytyty [CI]'
