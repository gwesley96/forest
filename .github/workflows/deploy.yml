name: Build and Deploy Forester Output

on:
  push:
    branches:
      - main # In your Forester project repository

jobs:
  build-and-deploy-forester:
    runs-on: ubuntu-latest

    container:
      image: ocaml/opam:ubuntu-ocaml-5.1
      options: --user root # Continue running as root

    steps:
      - name: Checkout Forester source code
        uses: actions/checkout@v4

      - name: Cache OPAM packages for root user
        id: cache-opam
        uses: actions/cache@v4
        with:
          path: /root/.opam 
          key: <span class="math-inline">\{\{ runner\.os \}\}\-ocaml5\.1\-opam\-root\-</span>{{ hashFiles('**/forest.toml\n**/*.opam\n**/opam.lock') }}
          restore-keys: |
            <span class="math-inline">\{\{ runner\.os \}\}\-ocaml5\.1\-opam\-root\-
\- name\: Set up OPAM, Install/Update Forester
shell\: bash
env\:
\# Make OPAM\_ROOT\_DIR available as an env var to this step's script
\# It's set here so it's explicit for the whole script block\.
OPAM\_ROOT\_DIR\_FOR\_SETUP\: /root/\.opam 
run\: \|
set \-e 
export OPAMROOT\="</span>{OPAM_ROOT_DIR_FOR_SETUP}" # Set OPAMROOT for opam commands in this script

          echo "OPAM_ROOT_DIR=${OPAMROOT}" >> $GITHUB_ENV # For subsequent steps, use this name
          
          echo "Initializing OPAM for root at ${OPAMROOT} (using --auto-setup)..."
          opam init --reinit --disable-sandboxing --auto-setup --yes # --root is implicit via OPAMROOT

          echo "Setting up OCaml switch 'default' (OCaml 5.1.1) at ${OPAMROOT}..."
          eval $(opam env) # Source initial env after init for current script

          if ! opam switch list | grep -q "^default "; then
            opam switch create default ocaml-base-compiler.5.1.1 --yes
          fi
          opam switch set default
          echo "OPAM_SWITCH_NAME=default" >> $GITHUB_ENV # For subsequent steps

          echo "Setting full OPAM environment variables for this current step..."
          eval $(opam env --switch=default --set-switch) # For current script

          echo "Verifying OCaml/OPAM versions (after full env setup for this step)..."
          opam --version
          ocaml --version
          echo "OPAM Root Directory from 'opam var root' is: $(opam var root)"
          echo "Current OPAM switch from 'opam var switch' is: $(opam var switch)"
          
          echo "Updating OPAM repositories..."
          opam update -u --yes
          
          echo "Installing Forester and its dependencies (using cache if available)..."
          opam install forester --yes --show-actions

      - name: Verify Forester Installation
        shell: bash 
        run: |
          echo "Sourcing OPAM environment for verification..."
          # OPAM_ROOT_DIR and OPAM_SWITCH_NAME come from <span class="math-inline">GITHUB\_ENV set in previous step
export OPAMROOT\="</span>{OPAM_ROOT_DIR}" # Explicitly set OPAMROOT for this script's env
          export OPAMSWITCH="${OPAM_SWITCH_NAME}" # Explicitly set OPAMSWITCH for this script's env
          
          # opam env should now use the exported OPAMROOT and OPAMSWITCH
          eval $(opam env --set-switch) # --root is implicit if OPAMROOT is set, --set-switch uses OPAMSWITCH
          
          echo "Updated PATH is: $PATH"
          echo "Found Forester at: <span class="math-inline">\(which forester \|\| echo 'Forester not found in PATH'\)"
forester \-\-version
\- name\: Build Forester Site
shell\: bash 
run\: \|
echo "Sourcing OPAM environment for build\.\.\."
export OPAMROOT\="</span>{OPAM_ROOT_DIR}" # From GITHUB_ENV
          export OPAMSWITCH="${OPAM_SWITCH_NAME}" # From GITHUB_ENV
          
          eval $(opam env --set-switch) # opam env should use exported OPAMROOT and OPAMSWITCH
          
          echo "Updated PATH is: $PATH"
          forester build forest.toml 
          echo "Forester build complete. Output should be in ./output/"
          echo "Contents of ./output directory:"
          ls -la ./output

      - name: Deploy 'output' directory to gwesley96.github.io/tytytyty
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GH_PAGES_PAT }} 
          external_repository: gwesley96/gwesley96.github.io
          publish_branch: master 
          publish_dir: ./output
          destination_dir: tytytyty 
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy Forester output to /tytytyty [CI]'
