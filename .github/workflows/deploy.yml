name: Build and Deploy Forester Output

on:
  push:
    branches:
      - main # In your Forester project repository

jobs:
  build-and-deploy-forester:
    runs-on: ubuntu-latest

    container:
      image: ocaml/opam:ubuntu-ocaml-5.1
      options: --user root # Continue running as root

    steps:
      - name: Checkout Forester source code
        uses: actions/checkout@v4
        # with:
        #   submodules: 'recursive' # If your Forester project has submodules

      - name: Cache OPAM packages for root user
        id: cache-opam
        uses: actions/cache@v4
        with:
          path: /root/.opam # OPAM root for the root user
          key: ${{ runner.os }}-ocaml5.1-opam-root-${{ hashFiles('**/forest.toml\n**/*.opam\n**/opam.lock') }}
          restore-keys: |
            ${{ runner.os }}-ocaml5.1-opam-root-

      - name: Set up OPAM, Install/Update Forester
        shell: bash
        env: # Define environment variables for this step
          OPAM_ROOT_DIR: /root/.opam
        run: |
          set -e # Exit immediately if a command exits with a non-zero status

          echo "Initializing OPAM for root at ${OPAM_ROOT_DIR} (no initial switch setup)..."
          # --no-setup prevents opam init from creating a switch or modifying shell files.
          # --reinit ensures it works even if an OPAMROOT exists (e.g. from cache).
          # --yes (or OPAMYES=1 from container) makes it non-interactive for other prompts.
          opam init --root="${OPAM_ROOT_DIR}" --reinit --disable-sandboxing --no-setup --yes
          
          echo "Setting basic OPAM environment for switch management..."
          # Source env after init to make current OPAMROOT active for switch commands
          eval $(opam env --root="${OPAM_ROOT_DIR}" --set-root) 

          echo "Ensuring OCaml 5.1.1 switch named 'default' exists at ${OPAM_ROOT_DIR}..."
          # Remove 'default' switch if it exists, to ensure we get the correct OCaml version.
          # '|| true' ensures the command doesn't fail if the switch doesn't exist.
          opam switch remove default --yes || true 
          opam switch create default ocaml-base-compiler.5.1.1 --yes
          # 'opam switch set default' is implicitly done by 'create' if it's the first/only switch
          # or if we ensure it by name. For clarity, we can add:
          # opam switch set default

          echo "Setting full OPAM environment variables (including switch) for this step and subsequent steps..."
          # This sets up PATH etc. for the 'default' (OCaml 5.1.1) switch.
          # Output to GITHUB_ENV for subsequent steps.
          opam env --switch=default --set-switch >> $GITHUB_ENV 
          eval $(opam env --switch=default --set-switch) # Source for current script block

          echo "Verifying OCaml/OPAM versions (after full env setup)..."
          opam --version
          ocaml --version
          echo "OPAM Root Directory from 'opam var root' is: $(opam var root)"
          echo "Current OPAM switch from 'opam var switch' is: $(opam var switch)"
          
          echo "Updating OPAM repositories..."
          opam update -u --yes
          
          echo "Installing Forester and its dependencies (using cache if available)..."
          opam install forester --yes --show-actions

      - name: Verify Forester Installation
        shell: bash 
        run: |
          echo "Sourcing OPAM environment for verification..."
          # Use OPAM_ROOT_DIR and OPAM_SWITCH_NAME from GITHUB_ENV
          # OPAM_SWITCH_NAME was set to 'default' in the previous step's GITHUB_ENV output
          # by the opam env command if it includes OPAMSWITCH.
          # To be safe, we can be explicit if GITHUB_ENV only gets OPAM_ROOT_DIR cleanly.
          # However, `opam env >> $GITHUB_ENV` should have set OPAMSWITCH.
          eval $(opam env --root="${OPAM_ROOT_DIR}" --switch=default --set-switch)
          echo "Updated PATH is: $PATH"
          which forester
          forester --version

      - name: Build Forester Site
        shell: bash 
        run: |
          echo "Sourcing OPAM environment for build..."
          eval $(opam env --root="${OPAM_ROOT_DIR}" --switch=default --set-switch)
          echo "Updated PATH is: $PATH"
          forester build forest.toml 
          echo "Forester build complete. Output should be in ./output/"
          echo "Contents of ./output directory:"
          ls -la ./output

      - name: Deploy 'output' directory to gwesley96.github.io/tytytyty
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GH_PAGES_PAT }} 
          external_repository: gwesley96/gwesley96.github.io
          publish_branch: master 
          publish_dir: ./output
          destination_dir: tytytyty 
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy Forester output to /tytytyty [CI]'
